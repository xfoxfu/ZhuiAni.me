name: CI

on:
  push:
  pull_request:

jobs:
  container:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Docker setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata action
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/zhuianime
          tags: |
            latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=ref,event=branch
            type=semver,pattern={{raw}}
            type=sha,enable=true,priority=100,prefix=commit-,suffix=,format=short

      - name: Publish images
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with: { version: 8 }
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
          cache-dependency-path: "Me.Xfox.ZhuiAnime.WebUI/pnpm-lock.yaml"
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"
          cache: true
          cache-dependency-path: "Me.Xfox.ZhuiAnime/packages.lock.json"

      - name: restore dependencies
        run: dotnet restore --locked-mode

      - name: build
        run: dotnet build -c Release --no-restore
      - name: test
        run: dotnet test -c Release --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: publish
        run: dotnet publish -c Release --no-restore
      - name: ef bundle
        run: |
          dotnet tool restore
          dotnet ef migrations script \
            --project Me.Xfox.ZhuiAnime \
            --idempotent \
            --no-build \
            --configuration Release \
            --output Me.Xfox.ZhuiAnime/bin/Release/net8.0/publish/migrations.sql
        if: ${{ false }}
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: Me.Xfox.ZhuiAnime
          path: Me.Xfox.ZhuiAnime/bin/Release/net8.0/publish/

  webui:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Me.Xfox.ZhuiAnime.WebUI
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with: { version: 8 }
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
          cache-dependency-path: "Me.Xfox.ZhuiAnime.WebUI/pnpm-lock.yaml"

      - name: install dependencies
        run: pnpm install --frozen-lockfile
      - name: lint
        run: pnpm lint
      - name: build
        run: pnpm build

  deploy:
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    needs: [container]
    env:
      RELEASE_VERSION: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo '{"zhuianime":"'"${RELEASE_VERSION}"'"}' >> green-sg/release.json
      - name: push update
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.GH_TOKEN_INFRA }}
        with:
          source_file: "release.json"
          destination_repo: "xfoxfu/infra"
          destination_folder: ""
          user_email: "gitops@noha.dev"
          user_name: "Noha GitOps"
          commit_message: "Upgrade ZhuiAni.me to ${{ env.RELEASE_VERSION }}"
